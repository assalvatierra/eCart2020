@model eCartModels.CartDetail

@{
    ViewBag.Title = "Cart Details";
}

<div class="row">
    <h1>@ViewBag.Store - Carts Details</h1>
    @Html.ActionLink("Back to List", "Index", "Store", new { area = "Store" }, null)
</div>

<div class="panel row" style="padding:15px;">
    <div class="panel-body store-cart">
        <div class="row">
            <h3 class="col-lg-12">
                Cart # : @Model.Id.ToString("0000")   &nbsp;
            </h3>
            <div class="col-lg-4">
                <p><span class="text-muted"> Status: </span> <span id="cart-status-text"> @Model.CartStatu.Name </span></p>
            </div>
            <div class="col-lg-8">
                <div class="btn-group">
                    <button id="status-processing" class="btn btn-default" onclick="SetCartStatus(@Model.Id, 3, 'Processing')"> Processing </button>
                    <button id="status-ready" class="btn btn-default" onclick="SetCartStatus(@Model.Id, 4, 'Ready')"> Ready </button>
                    <button id="status-delivered" class="btn btn-default" onclick="SetCartStatus(@Model.Id, 5, 'Delivered')"> Delivered </button>
                    <button id="status-cancel" class="btn btn-default" onclick="SetCartStatus(@Model.Id, 6, 'Cancelled')"> Cancel </button>
                </div>
                <div class="btn-group  pull-right">
                    <button class="btn btn-default" data-target="#PaymentModal" data-toggle="modal"> Payment </button>
                    <button class="btn btn-default" data-target="#CartReleaseModal" data-toggle="modal"> Cart Release </button>
                    @Html.ActionLink("History", "CartHistory", new { id = Model.Id }, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>

        <hr />
        <h4> <b> Shopper Details </b> </h4>
        <div class="col-lg-12">
            <div class="col-lg-4">
                <p> <span class="text-muted"> Shopper:</span> @Model.UserDetail.Name    </p>
                <p> <span class="text-muted"> Contact:</span> @Model.UserDetail.Mobile  </p>
                <p> <span class="text-muted"> Email:</span> @Model.UserDetail.Email     </p>

            </div>

            <div class="col-lg-4">
                <p> <span class="text-muted"> Delivery Type:</span>  @Model.DeliveryType</p>
                <p> <span class="text-muted"> Pickup Date:</span> @Model.DtPickup.ToString("MMM dd yyyy HH:mm ") </p>
                <p> <span class="text-muted"> Pickup Location:</span>  @Model.StorePickupPoint.StoreDetail.Name, @Model.StorePickupPoint.Address </p>
            </div>

            <div class="col-lg-4">
                <p>
                    <span class="text-muted"> Payment Type:</span>
                    @if (Model.PaymentDetails.Count != 0)
                    {
                        @Model.PaymentDetails.FirstOrDefault().PaymentReceiver.Description
                    }
                    else
                    {
                        <text> Cash on Delivery </text>
                    }

                </p>
                <p>
                    <span class="text-muted"> Payment Status:</span>
                    @if (Model.PaymentDetails.Count != 0)
                    {
                        @Model.PaymentDetails.LastOrDefault().PaymentStatu.Name
                    }
                    else
                    {
                        <text> Pending </text>
                    }

                </p>
            </div>
        </div>
        <hr />
        <h4> <b> Shopper Items </b> </h4>
        <div>
            <table class="table bordered">
                <thead style="font-weight:bold;background-color:whitesmoke;">
                    <tr>
                        <th style="padding-left:20px;"> Item </th>
                        <th> Qty </th>
                        <th> Item Price </th>
                        <th> Total </th>
                    </tr>
                </thead>
                <tbody>
                    @{ decimal total = 0; }
                    @foreach (var item in Model.CartItems)
                    {
                        <tr>
                            <td style="padding-left:20px;">
                                <b>  @item.StoreItem.ItemMaster.Name </b>
                            </td>
                            <td>
                                @item.ItemQty
                            </td>
                            <td>
                                @item.StoreItem.UnitPrice.ToString("0.00")
                            </td>
                            <td>
                                @{
                                    var subtotal = item.StoreItem.UnitPrice * item.ItemQty;
                                    total += subtotal;
                                }

                                <b> @subtotal.ToString("0.00") </b>
                            </td>
                        </tr>
                    }

                    <tr>
                        <td colspan="3" style="text-align:right;"> <span style="font-size:16px;"> Total Amount: </span> </td>
                        <td><b style="font-size:20px;"> @total.ToString("0.00") </b></td>
                    </tr>
                </tbody>
            </table>
        </div>

        <h4> <b> Payments</b> </h4>
        <div class="panel ">
            <table class="table bordered">
                <thead>
                    <tr style="font-weight:bold;background-color:whitesmoke;">
                        <th> Date </th>
                        <th> Party </th>
                        <th> Party Info </th>
                        <th> Receiver </th>
                        <th> Receiver Info </th>
                        <th> status </th>
                        <th> Amount </th>
                    </tr>
                </thead>
                <tbody id="table-payments">
                    @foreach (var payment in ViewBag.PaymentDetails as IEnumerable<eCartModels.PaymentDetail>)
                    {
                        <tr>
                            <td> @payment.dtPayment.ToString("MMMM dd yyyy hh:mm tt") </td>
                            <td> @payment.PaymentParty.Name </td>
                            <td> @payment.PartyInfo </td>
                            <td> @payment.PaymentReceiver.Description </td>
                            <td> @payment.ReceiverInfo </td>
                            <td> @payment.PaymentStatu.Name </td>
                            <td> @payment.Amount.ToString("0.00") </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>
        @Html.Partial("_PartialCartDelivery", ViewBag.CartDelivery as IEnumerable<eCartModels.CartDelivery>,
            new ViewDataDictionary { { "PaymentReceiverList", ViewBag.PaymentReceiverList }, { "RiderList", ViewBag.RiderList }, { "DtPickup", Model.DtPickup },
                { "CartId", Model.Id }, { "Address", Model.StorePickupPoint.Address } })

    </div>
</div>


@Html.Partial("_ModalPayment", null, new ViewDataDictionary { { "PaymentReceiverList", ViewBag.PaymentReceiverList },
    { "PaymentPartyList", ViewBag.PaymentPartyList }, { "PaymentStatusList", ViewBag.PaymentStatusList }, { "CartId", Model.Id } })



@Html.Partial("_ModalCartRelease", null, new ViewDataDictionary { { "StorePickupPoints", ViewBag.StorePickupPoints },
    { "UserDetails", ViewBag.UserDetails }, { "CartId", Model.Id } , { "UserId", ViewBag.UserId } , { "UserEmail", ViewBag.UserEmail } })


@section Scripts{
    <script src="~/Areas/Store/Scripts/CartDetails/ModalPayment.js"></script>
    <script src="~/Areas/Store/Scripts/CartDetails/PartialCartDelivery.js"></script>
    <script src="~/Areas/Store/Scripts/CartDetails/ModalCartDeliveryAdd.js"></script>
    <script src="~/Areas/Store/Scripts/CartDetails/ModalCartDeliveryEdit.js"></script>
    <script src="~/Areas/Store/Scripts/CartDetails/ModalCartRelease.js"></script>
    <script>
    //on document ready
        $(function () {
            var statusId = '@Model.CartStatu.Id';
            UpdateCartStatusBtn(statusId);
        });

        function UpdateCartStatusBtn(statusId) {
            //set status
            switch (statusId) {
                case '3':
                    //processing
                    $("#status-processing").addClass("btn-primary");
                    $("#status-processing").siblings().removeClass("btn-primary");
                    break;
                case '4':
                    //ready
                    $("#status-ready").addClass("btn-primary");
                    $("#status-ready").siblings().removeClass("btn-primary");
                    break;
                case '5':
                    //delivered
                    $("#status-delivered").addClass("btn-primary");
                    $("#status-delivered").siblings().removeClass("btn-primary");
                    break;
                case '6':
                    //cancel
                    $("#status-cancel").addClass("btn-primary");
                    $("#status-cancel").siblings().removeClass("btn-primary");
                    break;
                default:
                    break;
            }

        }

    function SetCartStatus(cartId, statusId, status) {
        $.get("/Store/CartDetails/SetCartStatus", { id: cartId, statusId, statusId }, (result) => {
            console.log(result);
            if (result) { //if res = true
                $("#cart-status-text").text(status);
                var statusID = statusId.toString(); // convert to string
                UpdateCartStatusBtn(statusID);
            }
        });
    }
    </script>
}